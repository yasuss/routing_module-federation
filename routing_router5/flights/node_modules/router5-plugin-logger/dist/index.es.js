var noop = function () { };
var loggerPlugin = function () {
    var startGroup, endGroup;
    if (console.groupCollapsed) {
        startGroup = function (label) { return console.groupCollapsed(label); };
        endGroup = function () { return console.groupEnd(); };
    }
    else if (console.group) {
        startGroup = function (label) { return console.group(label); };
        endGroup = function () { return console.groupEnd(); };
    }
    else {
        startGroup = noop;
        endGroup = noop;
    }
    console.info('Router started');
    return {
        onStop: function () {
            console.info('Router stopped');
        },
        onTransitionStart: function (toState, fromState) {
            endGroup();
            startGroup('Router transition');
            console.log('Transition started from state');
            console.log(fromState);
            console.log('To state');
            console.log(toState);
        },
        onTransitionCancel: function () {
            console.warn('Transition cancelled');
        },
        onTransitionError: function (toState, fromState, err) {
            console.warn('Transition error with code ' + err.code);
            endGroup();
        },
        onTransitionSuccess: function () {
            console.log('Transition success');
            endGroup();
        }
    };
};

export default loggerPlugin;
